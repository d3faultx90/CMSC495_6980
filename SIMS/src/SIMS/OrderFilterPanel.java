/*
 * File: OrderFilterPanel.java
 * Author: Ben Sutter
 * Date: July 19th, 2021
 * Purpose: Panel that is used to filter orders
 */
package SIMS;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import enums.OrderStatus;

public class OrderFilterPanel extends javax.swing.JPanel {

	public OrderFilterPanel() {
		initComponents();
		TableColumnModel columnModel = itemTable.getColumnModel();
		columnModel.getColumn(0).setPreferredWidth(35);
		columnModel.getColumn(2).setPreferredWidth(20);
		addOrderAndIdToTable();

	}

	private void filterFieldKeyReleased(java.awt.event.KeyEvent evt) {
		// This needs to be updated with stuff from the order query
		GeneralGuiFunctions.filterTable(itemTable, filterField);
	}

	private void filterFieldActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	// Given a 2D list, add the item and the quantity of the list to the selected
	// table
	private void addOrderAndIdToTable() {

		DefaultTableModel model = (DefaultTableModel) itemTable.getModel();

		for (List l : Database.getOrderTable()) {
			int status = GeneralGuiFunctions.castObjectToInteger(l.get(9)); // Index 10 = Status
			// 0 = pending, so if it is not pending (Approved/Denied) then show it
			if (status > 0) {
				// Index 1 = EventId, Index 9 = OrderDate
				model.addRow(new Object[] { l.get(1), l.get(8), OrderStatus.values()[status] });
			}
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextField filterField;
	private javax.swing.JLabel filterLabel;
	private javax.swing.JScrollPane itemScrollPane;
	public javax.swing.JTable itemTable;
	// End of variables declaration//GEN-END:variables

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		filterLabel = new javax.swing.JLabel();
		filterField = new javax.swing.JTextField();
		itemScrollPane = new javax.swing.JScrollPane();
		itemTable = new javax.swing.JTable();

		filterLabel.setText("Filter");

		filterField.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				filterFieldActionPerformed(evt);
			}
		});
		filterField.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyReleased(java.awt.event.KeyEvent evt) {
				filterFieldKeyReleased(evt);
			}
		});

		itemTable.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {},
				new String[] { "Order ID", "Order Date", "Status" }) {
			Class[] types = new Class[] { java.lang.String.class, java.lang.String.class, java.lang.Object.class };
			boolean[] canEdit = new boolean[] { false, false, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		itemScrollPane.setViewportView(itemTable);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(itemScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
						.addGroup(layout.createSequentialGroup().addComponent(filterLabel)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(filterField, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)))
				.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
						.addComponent(filterLabel).addComponent(filterField, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
				.addComponent(itemScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
				.addContainerGap()));
	}// </editor-fold>

}
